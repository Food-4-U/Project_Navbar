Index: app/src/main/java/com/grupo1/food4u_nav/ui/menu/MenuFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.grupo1.food4u_nav.ui.menu\r\n\r\nimport android.app.AlertDialog\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.cardview.widget.CardView\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.grupo1.food4u_nav.ProductDetailsActivity\r\nimport com.grupo1.food4u_nav.R\r\nimport com.grupo1.food4u_nav.adapters.ProductMenuAdapter\r\nimport com.grupo1.food4u_nav.adapters.SectionAdapter\r\nimport com.grupo1.food4u_nav.adapters.SubCategoriesAdapterMenu\r\nimport com.grupo1.food4u_nav.databinding.FragmentMenuBinding\r\nimport com.grupo1.food4u_nav.models.CategoryType\r\nimport com.grupo1.food4u_nav.models.Item_Menu\r\nimport com.grupo1.food4u_nav.models.Section\r\nimport com.grupo1.food4u_nav.models.SubCategories\r\nimport dalvik.system.BaseDexClassLoader\r\nimport okhttp3.internal.concurrent.TaskRunner\r\nimport projeto.ipca.food4u.grupoI.adapters.HottestAdapter\r\n\r\nclass MenuFragment : Fragment() {\r\n\r\n    private var _binding: FragmentMenuBinding? = null\r\n\r\n    // This property is only valid between onCreateView and\r\n    // onDestroyView.\r\n    private val binding get() = _binding!!\r\n    /*var subcategories : List<SubCategories> = arrayListOf()\r\n    var francesinhas : List<Item_Menu> = arrayListOf()\r\n    var hamburgueres : List<Item_Menu> = arrayListOf()\r\n    var cachorros : List<Item_Menu> = arrayListOf()\r\n    var pregos : List<Item_Menu> = arrayListOf()*/\r\n    var subCategory1 : SubCategories? = null\r\n    var subCategory2 : SubCategories? = null\r\n    var subCategory3 : SubCategories? = null\r\n    var subCategory4 : SubCategories?= null\r\n\r\n\r\n    var itens : List<Item_Menu> = arrayListOf()\r\n    var categories : List<CategoryType> = arrayListOf()\r\n\r\n\r\n    private var mainCategoryRecycler:RecyclerView? = null\r\n    private var mainRecyclerAdapter: SectionAdapter? = null\r\n\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n\r\n        _binding = FragmentMenuBinding.inflate(inflater, container, false)\r\n        val root: View = binding.root\r\n\r\n      /*  var productType1 = binding.productType1\r\n        var productType2 = binding.productType2\r\n        var productType3 = binding.productType3\r\n        var productType4 = binding.productType4\r\n\r\n        Backend.getNameSubcategory(1) {\r\n            if (it.name == null){\r\n                AlertDialog.Builder(requireActivity())\r\n                    .setTitle(\"Alerta Conexão Internet\")\r\n                    .setMessage(\"Por favor verifique a sua conexão à Internet\")\r\n                    .setPositiveButton(\r\n                        \"Fechar\"\r\n                    ) { dialogInterface, i -> requireActivity().finish() }.show()\r\n            }else{\r\n                subCategory1 = it\r\n\r\n                productType1.text = it.name\r\n            }\r\n        }\r\n\r\n        Backend.getNameSubcategory(2) {\r\n            subCategory2 = it\r\n\r\n            productType2.text = it.name\r\n        }\r\n\r\n        Backend.getNameSubcategory(3) {\r\n            subCategory3 = it\r\n\r\n            productType3.text = it.name\r\n        }\r\n\r\n        Backend.getNameSubcategory(7) {\r\n            subCategory4 = it\r\n            productType4.text = it.name\r\n        }*/\r\n\r\n        Backend.getAllCategories {\r\n            categories = it\r\n\r\n            Backend.getAllItens {\r\n                itens = it\r\n\r\n                val allCategory: MutableList<Section> = ArrayList()\r\n\r\n                for (i in categories.indices) {\r\n                    val categoryItemList: MutableList<Item_Menu> = ArrayList()\r\n\r\n                    for (j in itens.indices)\r\n                        if (categories[i].id == itens[j].id_categoria)\r\n                            categoryItemList.add(itens[j])\r\n\r\n                    allCategory.add(Section(categories[i].name, categoryItemList))\r\n                }\r\n\r\n                setMainCategoryRecycler(root,allCategory)\r\n            }\r\n        }\r\n\r\n\r\n        /*Backend.getAllSubcategories {\r\n            subcategories = it\r\n            val rv_subcategories : RecyclerView = root.findViewById(R.id.rv_menu)\r\n            val subCategoriesAdapter = SubCategoriesAdapterMenu(subcategories)\r\n\r\n            rv_subcategories.layoutManager = LinearLayoutManager(activity, LinearLayoutManager.HORIZONTAL,false)\r\n            rv_subcategories.adapter = subCategoriesAdapter\r\n        }\r\n\r\n        Backend.getItemSubCategory(1) {\r\n            francesinhas = it\r\n\r\n            val rv_products : RecyclerView = binding.rvProducts1\r\n            val productsAdapter = ProductMenuAdapter(requireActivity(), francesinhas)\r\n\r\n            rv_products.layoutManager = GridLayoutManager(activity, 2)\r\n            rv_products.adapter = productsAdapter\r\n        }\r\n\r\n        Backend.getItemSubCategory(2) {\r\n            hamburgueres = it\r\n\r\n            val rv_products : RecyclerView = binding.rvProducts2\r\n            val productsAdapter = ProductMenuAdapter(requireActivity(), hamburgueres)\r\n\r\n            rv_products.layoutManager = GridLayoutManager(activity, 2)\r\n            rv_products.adapter = productsAdapter\r\n        }\r\n\r\n        Backend.getItemSubCategory(3) {\r\n            cachorros = it\r\n\r\n            val rv_products : RecyclerView = binding.rvProducts3\r\n            val productsAdapter = ProductMenuAdapter(requireActivity(), cachorros)\r\n\r\n            rv_products.layoutManager = GridLayoutManager(activity, 2)\r\n            rv_products.adapter = productsAdapter\r\n        }\r\n\r\n        Backend.getItemSubCategory(7) {\r\n            pregos = it\r\n\r\n            val rv_products : RecyclerView = binding.rvProducts4\r\n            val productsAdapter = ProductMenuAdapter(requireActivity(), pregos)\r\n\r\n            rv_products.layoutManager = GridLayoutManager(activity, 2)\r\n            rv_products.adapter = productsAdapter\r\n\r\n        }*/\r\n\r\n        return root\r\n    }\r\n\r\n    private fun setMainCategoryRecycler(view:View,allCategory: List<Section>){\r\n\r\n        mainCategoryRecycler = view.findViewById(R.id.main_recycler)\r\n        val layoutManager: RecyclerView.LayoutManager = LinearLayoutManager(requireActivity())\r\n        mainCategoryRecycler!!.layoutManager = layoutManager\r\n        mainRecyclerAdapter = SectionAdapter(requireActivity(), allCategory)\r\n        mainCategoryRecycler!!.adapter = mainRecyclerAdapter\r\n\r\n    }\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/grupo1/food4u_nav/ui/menu/MenuFragment.kt b/app/src/main/java/com/grupo1/food4u_nav/ui/menu/MenuFragment.kt
--- a/app/src/main/java/com/grupo1/food4u_nav/ui/menu/MenuFragment.kt	(revision d75cc1df38167022984c8573e8b1f74f7d15b907)
+++ b/app/src/main/java/com/grupo1/food4u_nav/ui/menu/MenuFragment.kt	(date 1654945465343)
@@ -44,7 +44,7 @@
 
 
     var itens : List<Item_Menu> = arrayListOf()
-    var categories : List<CategoryType> = arrayListOf()
+    var categories : List<SubCategories> = arrayListOf()
 
 
     private var mainCategoryRecycler:RecyclerView? = null
@@ -97,7 +97,7 @@
             productType4.text = it.name
         }*/
 
-        Backend.getAllCategories {
+        Backend.getAllSubcategories {
             categories = it
 
             Backend.getAllItens {
@@ -109,10 +109,10 @@
                     val categoryItemList: MutableList<Item_Menu> = ArrayList()
 
                     for (j in itens.indices)
-                        if (categories[i].id == itens[j].id_categoria)
+                        if (categories[i].id_SubCategory == itens[j].id_categoria)
                             categoryItemList.add(itens[j])
 
-                    allCategory.add(Section(categories[i].name, categoryItemList))
+                    allCategory.add(Section(categories[i].name!!, categoryItemList))
                 }
 
                 setMainCategoryRecycler(root,allCategory)

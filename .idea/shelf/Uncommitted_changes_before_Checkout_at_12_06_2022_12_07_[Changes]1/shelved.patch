Index: app/src/main/java/com/grupo1/food4u_nav/adapters/OrderAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.grupo1.food4u_nav.adapters\r\n\r\nimport Backend\r\nimport android.app.AlertDialog\r\nimport android.content.Context\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.navigation.navArgument\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.grupo1.food4u_nav.OrderActivity\r\nimport com.grupo1.food4u_nav.R\r\nimport com.grupo1.food4u_nav.models.data.CartDatabase\r\nimport com.grupo1.food4u_nav.models.data.CartItem\r\nimport com.grupo1.food4u_nav.models.data.CartViewModel\r\nimport com.squareup.picasso.Picasso\r\nimport androidx.lifecycle.lifecycleScope\r\nimport androidx.room.Index\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.GlobalScope\r\nimport kotlinx.coroutines.launch\r\n\r\nclass OrderAdapter(val context: Context) : RecyclerView.Adapter<OrderAdapter.ViewHolder>() {\r\n\r\n\r\n    class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        var quantidade = itemView.findViewById<TextView>(R.id.productOrderNumber)\r\n        var nome = itemView.findViewById<TextView>(R.id.productNameOrderRow)\r\n        var price = itemView.findViewById<TextView>(R.id.productOrderPrice)\r\n        var photoFood = itemView.findViewById<ImageView>(R.id.productImageOrderRow)\r\n        var buttonPlus = itemView.findViewById<ImageView>(R.id.productOrderPlusIcon)\r\n        var buttonMinus = itemView.findViewById<ImageView>(R.id.productOrderMinusIcon)\r\n        var total = itemView.findViewById<TextView>(R.id.orderTotal1)\r\n        var anota = itemView.findViewById<TextView>(R.id.anotacoesOrderRow)\r\n    }\r\n\r\n    private var cart = emptyList<CartItem>()\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n        var view = ViewHolder(LayoutInflater.from(parent.context).inflate(R.layout.row_order, parent, false))\r\n        return view\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return cart.size\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n        val cartItem = cart[position]\r\n        holder.quantidade.text = cart[position].quantidade.toString()\r\n\r\n        var prefs = context.getSharedPreferences(\"Observ\",\r\n            Context.MODE_PRIVATE\r\n        )\r\n\r\n        holder.anota.text = prefs.getString(cart[position].item_id.toString(), \"\")\r\n\r\n\r\n        Backend.getItemID(cart[position].item_id!!){\r\n            holder.nome.text = it.nome\r\n\r\n            var imageURL = it.url\r\n            Picasso.get().load(imageURL).resize(800,650).into(holder.photoFood)\r\n            var price = (it.preco!! * (cart[position].quantidade!!))\r\n            var priceUnit = it.preco\r\n            var priceText = String.format(\"%.2f\", price)\r\n            holder.price.text = priceText.plus(\" €\")\r\n\r\n\r\n            holder.buttonPlus.setOnClickListener{\r\n                cart[position].quantidade = cart[position].quantidade?.plus(1)\r\n                cart[position].precoTotal = cart[position].quantidade!! * priceUnit!!\r\n                setData(cart)\r\n                var cartItem = cart[position]\r\n\r\n\r\n                GlobalScope.launch(Dispatchers.IO) {\r\n                    CartDatabase.getDatabase(context)?.cartDao().updateItem(cartItem)\r\n                }\r\n            }\r\n\r\n            holder.buttonMinus.setOnClickListener{\r\n                if (cart[position].quantidade!! >= 2)\r\n                {\r\n                    cart[position].quantidade = cart[position].quantidade?.minus(1)\r\n                    cart[position].precoTotal = cart[position].quantidade!! * priceUnit!!\r\n                    setData(cart)\r\n                    var cartItem = cart[position]\r\n\r\n                    GlobalScope.launch(Dispatchers.IO) {\r\n                        CartDatabase.getDatabase(context)?.cartDao().updateItem(cartItem)\r\n\r\n                    }\r\n                }\r\n                else {\r\n                    val builder = AlertDialog.Builder(context)\r\n                    builder.setTitle(\"Confirmação\")\r\n                    builder.setMessage(\"Tem a certeza que pretende eliminar este item?\")\r\n\r\n                    builder.setPositiveButton(R.string.yes) { dialog, which ->\r\n                        GlobalScope.launch(Dispatchers.IO) {\r\n                            CartDatabase.getDatabase(context).cartDao().delete(cartItem)\r\n                            var observ = context.getSharedPreferences(\"Observ\", Context.MODE_PRIVATE).edit().clear().apply()\r\n                        }\r\n                    }\r\n\r\n                    builder.setNegativeButton(R.string.no) { dialog, which ->\r\n                    }\r\n\r\n                    builder.show()\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    fun setData(cart: List<CartItem>) {\r\n        this.cart = cart\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n    fun totalCart(context: Context, cartList: List<CartItem>): Double {\r\n        var total = 0.0\r\n\r\n        for (i in 1..cartList.size){\r\n            total += cartList[i - 1].precoTotal!!\r\n        }\r\n\r\n\r\n        return total\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/grupo1/food4u_nav/adapters/OrderAdapter.kt b/app/src/main/java/com/grupo1/food4u_nav/adapters/OrderAdapter.kt
--- a/app/src/main/java/com/grupo1/food4u_nav/adapters/OrderAdapter.kt	
+++ b/app/src/main/java/com/grupo1/food4u_nav/adapters/OrderAdapter.kt	
@@ -78,7 +78,7 @@
 
 
                 GlobalScope.launch(Dispatchers.IO) {
-                    CartDatabase.getDatabase(context)?.cartDao().updateItem(cartItem)
+                    CartDatabase.getDatabase(context).cartDao().updateItem(cartItem)
                 }
             }
 
@@ -91,7 +91,7 @@
                     var cartItem = cart[position]
 
                     GlobalScope.launch(Dispatchers.IO) {
-                        CartDatabase.getDatabase(context)?.cartDao().updateItem(cartItem)
+                        CartDatabase.getDatabase(context).cartDao().updateItem(cartItem)
 
                     }
                 }
